<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Tasker-HttpRequest</title>
    <link href="/2021/07/27/Tasker-HttpRequest/"/>
    <url>/2021/07/27/Tasker-HttpRequest/</url>
    
    <content type="html"><![CDATA[<p class="note note-warning">    WARNING<br>    在学习并利用本功能前你应当清楚，即使是在上传真实数据的情况下，此行为仍可能违反了校规，或许会造成不好的后果！</p><p>​        #由于这是第一篇Tasker博客，首先将介绍Tasker</p><p>​        </p><p>​        #最后一次编辑于8月9日</p><h1 id="关于Tasker"><a href="#关于Tasker" class="headerlink" title="关于Tasker"></a>关于Tasker</h1><p>​        ——Total Automation for Android  </p><p>​        一次<del>上课</del>(划水)时偶然在<a href="https://hsiaofeng.com/">筱枫</a>的iPhone上了解到<code>快捷指令</code>这个软件(由于Android的开源可玩性极高，我至今未体验过ios🙄也许以后有机会)，被这种设定好以某种触发方式，自动执行指令的运作模式所吸引到。于是便开始寻找Android端是否有类似软件，很高兴——有且不止一个<a href="https://ifttt.com/">IFTTT</a>、<a href="https://tasker.joaoapps.com/">Tasker</a>……  </p><p>由于IFTTT的着重点在于各社交应用间的联动，可玩性没有Tasker高，这里选择后者作为方便生活的自动化工具。  </p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>​        你可以在<a href="https://tasker.joaoapps.com/">Tasker for Android</a>找到老版本的安装包，也可以在<a href="https://play.google.com/store/apps/details?id=net.dinglisch.android.taskerm">Google Playstore</a>上购买$3.49或试用七天。</p><p>​        当然，出于学习的目的(<del>相信你不会商用</del>)我也为你准备了去除Google授权验证的<a href="https://wingchaos.space/img/Tasker-HttpRequest/TaskerAutoRm.apk">学习版</a></p><p>——至此，介绍、安装部分结束。</p><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><img alt="" src="/img/Tasker-HttpRequest/mind.jpg"><h3 id="一、了解打卡过程"><a href="#一、了解打卡过程" class="headerlink" title="一、了解打卡过程"></a>一、了解打卡过程</h3><p>​        打卡这一操作无非就是向服务器发送数据，要<del>截获</del>(获取，并未劫持)数据我们需要用到<a href="https://www.telerik.com/download/fiddler/fiddler4">Fiddler4</a>，这一过程称作<code>抓包</code></p><p>你可以理解为<a href="https://www.bilibili.com/video/BV1kW411c7Qm">窃听有线通话</a>的操作@罗兹</p><p><a href="#hsiaofeng">筱枫的抓包结果</a>  </p><p><strong>（由于系统做出调整，代码于8月9日更新）</strong></p><h3 id="二、模拟打卡操作"><a href="#二、模拟打卡操作" class="headerlink" title="二、模拟打卡操作"></a>二、模拟打卡操作</h3><p>​        在进行操作前，你应该对HTTP的几种请求方式有些许了解，这里我们用到了POST向服务器提交数据。</p><p>​        在新版的Tasker里，HTTP POST等操作被整合进了<code>HTTP Request</code>。</p><p><strong>URL</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://apii.▇▇▇▇.edu.cn/v1/accounts/login/<br></code></pre></td></tr></table></figure><p><strong>头部</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-attribute">Content-Type</span><span class="hljs-punctuation">: </span>application/json; charset=utf-8 <br><span class="hljs-attribute">Accept-Encoding</span><span class="hljs-punctuation">: </span>gzip, deflate, br <br><span class="hljs-attribute">Connection</span><span class="hljs-punctuation">: </span>keep-alive <br><span class="hljs-attribute">Accept</span><span class="hljs-punctuation">: </span>application/json<br></code></pre></td></tr></table></figure><p><strong>主体</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">&#123;&quot;username&quot;:&quot;账号&quot;,&quot;password&quot;:&quot;密码&quot;&#125;<br></code></pre></td></tr></table></figure><h4 id="转到“任务”页面，新建任务"><a href="#转到“任务”页面，新建任务" class="headerlink" title="转到“任务”页面，新建任务"></a>转到“任务”页面，新建任务</h4><p><strong>新建HTTP Request操作，填入上方内容</strong></p><p><strong>输出目录填<code>Download/</code>其他默认</strong></p><img alt="" src="/img/Tasker-HttpRequest/token.jpg" width=50%><img alt="" src="/img/Tasker-HttpRequest/choice.jpg" width=50%><img alt="" src="/img/Tasker-HttpRequest/httprequest.jpg" width=50%><p><strong>如果一切正常（指：操作、内容填充正确）</strong>  </p><p><strong>点击左下角运行键，你不该看到（错误原因如图）</strong></p><img alt="" src="/img/Tasker-HttpRequest/gettoken.jpg" width=50%><p><strong>而是在任务前看到一个绿点，并可以在手机文件管理器中<code>Download/</code>文件夹找到一个名为<code>login</code>的json文件，把它以文本方式打开</strong></p>   <figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs json">&#123;<span class="hljs-attr">&quot;token&quot;</span>:<span class="hljs-string">&quot;复制文件中这个位置的token&quot;</span>,<span class="hljs-attr">&quot;token_expiration_datetime&quot;</span>:<span class="hljs-string">&quot;这里是有效期2022-02-02 10:17:25&quot;</span>&#125;<br></code></pre></td></tr></table></figure><img alt="" src="/img/Tasker-HttpRequest/doc.jpg" width=50%><h4 id="开始模拟打卡，新建晨报打卡任务，依然选择HTTP-Request"><a href="#开始模拟打卡，新建晨报打卡任务，依然选择HTTP-Request" class="headerlink" title="开始模拟打卡，新建晨报打卡任务，依然选择HTTP Request"></a>开始模拟打卡，新建晨报打卡任务，依然选择HTTP Request</h4><p><strong>URL</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://apii.▇▇▇▇.edu.cn/v1/temperatures/<br></code></pre></td></tr></table></figure><p><strong>头部</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http"><span class="hljs-attribute">Authorization</span><span class="hljs-punctuation">: </span>JWT 粘贴你的token<br></code></pre></td></tr></table></figure><p><strong>主体</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs http">&#123;<br>    &quot;code_color&quot;: &quot;A&quot;,<br>    &quot;condition&quot;: &quot;A&quot;,<br>    &quot;contacted_health&quot;: &quot;&quot;,<br>    &quot;family_conditions&quot;: &quot;&quot;,<br>    &quot;high_risk_status&quot;: &quot;A&quot;,<br>    &quot;home_condition&quot;: &quot;A&quot;,<br>    &quot;is_contacted&quot;: false,<br>    &quot;stayed&quot;: false,<br>    &quot;stayed_contacted&quot;: false,<br>    &quot;submitted_to_haedu&quot;: false,<br>    &quot;vaccine_status&quot;: &quot;A&quot;,<br>    &quot;value&quot;: &quot;36.0&quot;,<br>    &quot;watched&quot;: false,<br>    &quot;watched_location&quot;: &quot;&quot;,<br>    &quot;contacted_health&quot;: &quot;&quot;,<br>    &quot;personid&quot;: &quot;&quot;,<br>    &quot;location&quot;: &#123;&#125;<br>&#125;<br></code></pre></td></tr></table></figure><p><strong>如图填入内容：</strong></p><img alt="" src="/img/Tasker-HttpRequest/morning.jpg" width=50%><p><strong>点击运行键测试，去微信小程序中查看晨报打卡是否多出一条</strong>  </p><img alt="" src="/img/Tasker-HttpRequest/test.jpg" width=50%><h4 id="新建午报打卡任务"><a href="#新建午报打卡任务" class="headerlink" title="新建午报打卡任务"></a>新建午报打卡任务</h4><p>​        <strong>午报只有URL和主体不同</strong></p><p><strong>URL</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs http">https://apii.▇▇▇▇.edu.cn/v1/noons/<br></code></pre></td></tr></table></figure><p><strong>主体</strong></p><figure class="highlight http"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs http">&#123;<br>    &quot;value&quot;: &quot;36.0&quot;,<br>    &quot;condition&quot;: &quot;A&quot;<br>&#125;<br></code></pre></td></tr></table></figure><img alt="" src="/img/Tasker-HttpRequest/noon.jpg" width=50%><h3 id="三、定时触发操作"><a href="#三、定时触发操作" class="headerlink" title="三、定时触发操作"></a>三、定时触发操作</h3><p>​        <strong>在配置文件页面新建，选择“时间”，调整时间，点击返回选择链接“晨报打卡”任务，午报打卡同理。</strong></p><img alt="" src="/img/Tasker-HttpRequest/cause.jpg" width=50%><img alt="" src="/img/Tasker-HttpRequest/time.jpg" width=50%><img alt="" src="/img/Tasker-HttpRequest/done.jpg" width=50%><h3 id="至此你已经完成了Tasker自动化操作的设置"><a href="#至此你已经完成了Tasker自动化操作的设置" class="headerlink" title="至此你已经完成了Tasker自动化操作的设置"></a>至此你已经完成了Tasker自动化操作的设置</h3><p>​            <strong>它将在设定时间向服务器发送打卡请求，完成自动打卡。</strong>  </p><h3 id="来自枫茶舍的嵌套页面"><a href="#来自枫茶舍的嵌套页面" class="headerlink" title="来自枫茶舍的嵌套页面"></a><a id="hsiaofeng">来自枫茶舍的嵌套页面</a></h3><iframe src="https://hsiaofeng.com/archives/81.html" width="100%" height="500" name="topFrame" scrolling="yes"  noresize="noresize" frameborder="1" id="topFrame"></iframe><h3 id="四、补充内容"><a href="#四、补充内容" class="headerlink" title="四、补充内容"></a>四、补充内容</h3><ol><li><p>研究Tasker进行自动化打卡的过程，少不了<a href="https://hsiaofeng.com/">筱枫</a>的支持，再次感谢筱枫！😉</p></li><li><p>当然，如果你看完了仍然觉得——很复杂，我也为你写好了<a href="https://wingchaos.space/img/Tasker-HttpRequest/backup.%E6%94%B9xml">配置文件</a>(需要改下后缀xml，也更新了)</p></li><li><details>    <summary>配置文件的导入</summary>    点击Tasker主页右上角—数据—还原—用户本地备份<br>    点一下手机图标，找到Download文件夹-选择-backup.xml-确定</details></li><li><p>为了Tasker能正常运行，一些必要的权限是要给的，这点需要自己判断</p></li><li><p>由于Tasker需要在后台长时间运行，一些手机的电池优化选项可能会杀掉进程，对该应用的省电策略应选择“无限制”</p></li><li><p>如果只是用来打卡，不推荐你在主力机上安装Tasker；这就相当于你用大功率洗衣机只洗一件T恤，性能浪费过多。  </p><p>所以找一部旧手机扔在平稳安静的地方再合适不过了；你还可以将多余的手机卡分配给它，一旦它接收到了验证码，就会立即推送至你的主力机……</p></li></ol><h3 id="Tasker——带给你无限种可能"><a href="#Tasker——带给你无限种可能" class="headerlink" title="Tasker——带给你无限种可能"></a>Tasker——带给你无限种可能</h3><p>​            <strong>如果你有任何问题请在下面留言，我会收到邮件并及时回复你</strong></p>]]></content>
    
    
    
    <tags>
      
      <tag>Tasker</tag>
      
      <tag>网页</tag>
      
      <tag>抓包</tag>
      
      <tag>自动化</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Annoying-QNDXX</title>
    <link href="/2021/07/26/annoying-QNDXX/"/>
    <url>/2021/07/26/annoying-QNDXX/</url>
    
    <content type="html"><![CDATA[<p class="note note-warning">    WARNING<br>    在学习本方法前你应当清楚，此行为违背了青年大学习网上主题团课的最初目的，可能造成不好的后果！</p><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>​    <strong>利用微信自带的腾讯<code>X5内核</code>，在网页视频播放时进行调试，达到更改视频播放时长的目的。</strong>  </p><h1 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h1><p>​                <strong>适用于Android，如果你是ios用户，请直接在任务栏中拖动视频进度条</strong></p><h3 id="一、确认内核"><a href="#一、确认内核" class="headerlink" title="一、确认内核"></a>一、确认内核</h3><p>​    将以下网址发送到任意微信联系人（建议发给自己，避免对他人造成困扰）  </p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ruby">debugmm.qq.com/<span class="hljs-string">?f</span>orcex5=<span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>​    点开查看结果是否为”force use x5 switch is on”  </p><p><img alt="" src="/img/annoying-QNDXX/ensurex5.jpg" width=40%><img alt="" src="/img/annoying-QNDXX/x5ison.jpg" width=40%></p><h3 id="二、开启x5内核调试"><a href="#二、开启x5内核调试" class="headerlink" title="二、开启x5内核调试"></a>二、开启x5内核调试</h3><p>​    将以下网址发送……  </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>debugx5.qq.com<br></code></pre></td></tr></table></figure><ol><li>单击网址进入<code>调试页面</code></li><li>单击页面上方<code>信息</code></li><li>勾选”打开<code>vConsole</code>调试功能”</li><li>刷新页面即可看到浮动的<code>vConsole</code>调试按钮</li></ol><p><img alt="" src="/img/annoying-QNDXX/openVconsole1.jpg" width=40%><img alt="" src="/img/annoying-QNDXX/openVconsole2.jpg" width=40%><img alt="" src="/img/annoying-QNDXX/openVconsole3.jpg" width=40%></p><h3 id="三、开始-学习"><a href="#三、开始-学习" class="headerlink" title="三、开始 学习"></a>三、开始 <del>学习</del></h3><p>​    复制以下指令至剪切板</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">document.getElementById(<span class="hljs-string">&#x27;Bvideo&#x27;</span>).<span class="hljs-attribute">currentTime</span>=3600;<br></code></pre></td></tr></table></figure><p>​    #获取并更改当前页面视频播放时间</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ini"><span class="hljs-attr">__vconsole.style.display</span>=<span class="hljs-string">&quot;none&quot;</span><span class="hljs-comment">;</span><br></code></pre></td></tr></table></figure><p>​    #隐藏<code>vConsole调试按钮</code>（用于截图，刷新页面后恢复显示）</p><ol><li><p>转至开始学习页面</p></li><li><p>点击<code>开始学习</code></p></li><li><p>打开<code>调试窗口</code></p></li><li><p>粘贴<code>修改指令</code>执行</p></li><li><p>答完所有题目</p></li></ol><p><strong>答完所有题目后，大概率出现视频仍在播放的情况，只需重新执行指令即可跳过</strong></p><p><strong>执行隐藏指令后截图，完成本次青年大学习</strong></p><p><img alt="" src="/img/annoying-QNDXX/begin1.jpg" width=40%><img alt="" src="/img/annoying-QNDXX/begin2.jpg" width=40%><img alt="" src="/img/annoying-QNDXX/end.jpg" width=40%></p><h3 id="四、补充内容"><a href="#四、补充内容" class="headerlink" title="四、补充内容"></a>四、补充内容</h3><ol><li>本方法来源于网络，本人仅将代码合并整理，并提供截图时调试按钮的隐藏思路。</li><li>使用本方法造成学校处分后果的，由使用者自行承担责任。</li><li>理论上：本方法完整的看（刷）完了视频。</li><li>图片排版太扯了，由于受各种不确定因素影响，不是我的锅🙄</li></ol>]]></content>
    
    
    
    <tags>
      
      <tag>网页</tag>
      
      <tag>青年大学习</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Learn-Hexo</title>
    <link href="/2021/07/26/learn-hexo/"/>
    <url>/2021/07/26/learn-hexo/</url>
    
    <content type="html"><![CDATA[<p>以下是由Hexo自动生成的第一个网页，意在便于使用者查阅指令、跳转至官方Doc等<br>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>网页</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
